//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CreateUpdateClient.CategoryServiceProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/Category_Prj.Service")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category_DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Category_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Category_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category_Description {
            get {
                return this.Category_DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.Category_DescriptionField, value) != true)) {
                    this.Category_DescriptionField = value;
                    this.RaisePropertyChanged("Category_Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Category_ID {
            get {
                return this.Category_IDField;
            }
            set {
                if ((this.Category_IDField.Equals(value) != true)) {
                    this.Category_IDField = value;
                    this.RaisePropertyChanged("Category_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category_Name {
            get {
                return this.Category_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Category_NameField, value) != true)) {
                    this.Category_NameField = value;
                    this.RaisePropertyChanged("Category_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoryServiceProxy.ICategory")]
    public interface ICategory {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Get_Category_By_ID", ReplyAction="http://tempuri.org/ICategory/Get_Category_By_IDResponse")]
        CreateUpdateClient.CategoryServiceProxy.Category Get_Category_By_ID(int category_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Get_Category_By_ID", ReplyAction="http://tempuri.org/ICategory/Get_Category_By_IDResponse")]
        System.Threading.Tasks.Task<CreateUpdateClient.CategoryServiceProxy.Category> Get_Category_By_IDAsync(int category_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Update_Category_By_ID", ReplyAction="http://tempuri.org/ICategory/Update_Category_By_IDResponse")]
        bool Update_Category_By_ID(CreateUpdateClient.CategoryServiceProxy.Category category_);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Update_Category_By_ID", ReplyAction="http://tempuri.org/ICategory/Update_Category_By_IDResponse")]
        System.Threading.Tasks.Task<bool> Update_Category_By_IDAsync(CreateUpdateClient.CategoryServiceProxy.Category category_);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Create_Category", ReplyAction="http://tempuri.org/ICategory/Create_CategoryResponse")]
        bool Create_Category(CreateUpdateClient.CategoryServiceProxy.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/Create_Category", ReplyAction="http://tempuri.org/ICategory/Create_CategoryResponse")]
        System.Threading.Tasks.Task<bool> Create_CategoryAsync(CreateUpdateClient.CategoryServiceProxy.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategories", ReplyAction="http://tempuri.org/ICategory/GetCategoriesResponse")]
        CreateUpdateClient.CategoryServiceProxy.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategory/GetCategories", ReplyAction="http://tempuri.org/ICategory/GetCategoriesResponse")]
        System.Threading.Tasks.Task<CreateUpdateClient.CategoryServiceProxy.Category[]> GetCategoriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoryChannel : CreateUpdateClient.CategoryServiceProxy.ICategory, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoryClient : System.ServiceModel.ClientBase<CreateUpdateClient.CategoryServiceProxy.ICategory>, CreateUpdateClient.CategoryServiceProxy.ICategory {
        
        public CategoryClient() {
        }
        
        public CategoryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CreateUpdateClient.CategoryServiceProxy.Category Get_Category_By_ID(int category_id) {
            return base.Channel.Get_Category_By_ID(category_id);
        }
        
        public System.Threading.Tasks.Task<CreateUpdateClient.CategoryServiceProxy.Category> Get_Category_By_IDAsync(int category_id) {
            return base.Channel.Get_Category_By_IDAsync(category_id);
        }
        
        public bool Update_Category_By_ID(CreateUpdateClient.CategoryServiceProxy.Category category_) {
            return base.Channel.Update_Category_By_ID(category_);
        }
        
        public System.Threading.Tasks.Task<bool> Update_Category_By_IDAsync(CreateUpdateClient.CategoryServiceProxy.Category category_) {
            return base.Channel.Update_Category_By_IDAsync(category_);
        }
        
        public bool Create_Category(CreateUpdateClient.CategoryServiceProxy.Category category) {
            return base.Channel.Create_Category(category);
        }
        
        public System.Threading.Tasks.Task<bool> Create_CategoryAsync(CreateUpdateClient.CategoryServiceProxy.Category category) {
            return base.Channel.Create_CategoryAsync(category);
        }
        
        public CreateUpdateClient.CategoryServiceProxy.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<CreateUpdateClient.CategoryServiceProxy.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
    }
}
