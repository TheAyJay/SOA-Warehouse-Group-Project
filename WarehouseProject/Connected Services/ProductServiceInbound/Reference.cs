//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InboundClient.ProductServiceInbound {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Product_Prj.Service")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long UPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryIDField, value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((this.ProductIDField.Equals(value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long UPC {
            get {
                return this.UPCField;
            }
            set {
                if ((this.UPCField.Equals(value) != true)) {
                    this.UPCField = value;
                    this.RaisePropertyChanged("UPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductServiceInbound.IProduct")]
    public interface IProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductByID", ReplyAction="http://tempuri.org/IProduct/GetProductByIDResponse")]
        InboundClient.ProductServiceInbound.Product GetProductByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductByID", ReplyAction="http://tempuri.org/IProduct/GetProductByIDResponse")]
        System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Product> GetProductByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductByUPC", ReplyAction="http://tempuri.org/IProduct/GetProductByUPCResponse")]
        InboundClient.ProductServiceInbound.Product GetProductByUPC(long upc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProductByUPC", ReplyAction="http://tempuri.org/IProduct/GetProductByUPCResponse")]
        System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Product> GetProductByUPCAsync(long upc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/UpdateProductByID", ReplyAction="http://tempuri.org/IProduct/UpdateProductByIDResponse")]
        bool UpdateProductByID(InboundClient.ProductServiceInbound.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/UpdateProductByID", ReplyAction="http://tempuri.org/IProduct/UpdateProductByIDResponse")]
        System.Threading.Tasks.Task<bool> UpdateProductByIDAsync(InboundClient.ProductServiceInbound.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/Create_Product", ReplyAction="http://tempuri.org/IProduct/Create_ProductResponse")]
        InboundClient.ProductServiceInbound.Create_ProductResponse Create_Product(InboundClient.ProductServiceInbound.Create_ProductRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/Create_Product", ReplyAction="http://tempuri.org/IProduct/Create_ProductResponse")]
        System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Create_ProductResponse> Create_ProductAsync(InboundClient.ProductServiceInbound.Create_ProductRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create_Product", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Create_ProductRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public InboundClient.ProductServiceInbound.Product product;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public Create_ProductRequest() {
        }
        
        public Create_ProductRequest(InboundClient.ProductServiceInbound.Product product, string message) {
            this.product = product;
            this.message = message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Create_ProductResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Create_ProductResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool Create_ProductResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string message;
        
        public Create_ProductResponse() {
        }
        
        public Create_ProductResponse(bool Create_ProductResult, string message) {
            this.Create_ProductResult = Create_ProductResult;
            this.message = message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductChannel : InboundClient.ProductServiceInbound.IProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductClient : System.ServiceModel.ClientBase<InboundClient.ProductServiceInbound.IProduct>, InboundClient.ProductServiceInbound.IProduct {
        
        public ProductClient() {
        }
        
        public ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InboundClient.ProductServiceInbound.Product GetProductByID(int id) {
            return base.Channel.GetProductByID(id);
        }
        
        public System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Product> GetProductByIDAsync(int id) {
            return base.Channel.GetProductByIDAsync(id);
        }
        
        public InboundClient.ProductServiceInbound.Product GetProductByUPC(long upc) {
            return base.Channel.GetProductByUPC(upc);
        }
        
        public System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Product> GetProductByUPCAsync(long upc) {
            return base.Channel.GetProductByUPCAsync(upc);
        }
        
        public bool UpdateProductByID(InboundClient.ProductServiceInbound.Product product) {
            return base.Channel.UpdateProductByID(product);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductByIDAsync(InboundClient.ProductServiceInbound.Product product) {
            return base.Channel.UpdateProductByIDAsync(product);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        InboundClient.ProductServiceInbound.Create_ProductResponse InboundClient.ProductServiceInbound.IProduct.Create_Product(InboundClient.ProductServiceInbound.Create_ProductRequest request) {
            return base.Channel.Create_Product(request);
        }
        
        public bool Create_Product(InboundClient.ProductServiceInbound.Product product, ref string message) {
            InboundClient.ProductServiceInbound.Create_ProductRequest inValue = new InboundClient.ProductServiceInbound.Create_ProductRequest();
            inValue.product = product;
            inValue.message = message;
            InboundClient.ProductServiceInbound.Create_ProductResponse retVal = ((InboundClient.ProductServiceInbound.IProduct)(this)).Create_Product(inValue);
            message = retVal.message;
            return retVal.Create_ProductResult;
        }
        
        public System.Threading.Tasks.Task<InboundClient.ProductServiceInbound.Create_ProductResponse> Create_ProductAsync(InboundClient.ProductServiceInbound.Create_ProductRequest request) {
            return base.Channel.Create_ProductAsync(request);
        }
    }
}
